/* 하나오픈뱅킹시스템 SQL */

desc HANA_MEMBER;

/*
이름              널?       유형           
--------------- -------- ------------ 
ID              NOT NULL VARCHAR2(14) 
PW              NOT NULL VARCHAR2(30) 
RESIDENT_NUMBER NOT NULL VARCHAR2(14) 
NAME            NOT NULL VARCHAR2(30) 
AGE             NOT NULL NUMBER(4)    
SEX                      CHAR(1)      
JOIN_DATE                DATE    
*/

-- 회원가입
INSERT INTO HANA_MEMBER(ID, PW, RESIDENT_NUMBER, NAME, AGE, SEX) 
VALUES('haeni', '1234', '931202-2222222', '이해니', '20' , 'F');

SELECT * FROM HANA_MEMBER;

SELECT to_CHAR(JOIN_DATE, 'yyyy-MM-dd HH:SS') FROM HANA_MEMBER;

commit;


-- 로그인
SELECT COUNT(*) FROM HANA_MEMBER WHERE ID = 'haeni';

SELECT * FROM HANA_MEMBER WHERE ID = 'haeni' AND pw = '1234';

-- 계좌 생성
DESC HANA_ACCOUNT;

/*
이름             널?       유형           
-------------- -------- ------------ 
ACCOUNT_NUMBER NOT NULL VARCHAR2(30) 
MEMBER_ID      NOT NULL VARCHAR2(14) 
ACCOUNT_PW     NOT NULL NUMBER(4)    
BALANCE        NOT NULL NUMBER(38)   
ALIAS                   VARCHAR2(30) 
OFTEN_USED              CHAR(1)      
LIMIT_AMOUNT            NUMBER(20)   
OPENING_DATE            DATE       
*/




INSERT INTO HANA_ACCOUNT(
    ACCOUNT_NUMBER, 
    MEMBER_ID, 
    ACCOUNT_PW, 
    BALANCE, 
    ALIAS, 
    OFTEN_USED,
    LIMIT_AMOUNT
) VALUES(
    'XXX-XXXXXX-XXXXX',
    'haeni',
    1234,
    1000,
    '생활비',
    'Y',
    1000000
);


SELECT to_char(11122222222222,'111-222222-22222') FROM DUAL;

SELECT * FROM HANA_ACCOUNT;

COMMIT;

INSERT INTO HANA_ACCOUNT
(ACCOUNT_NUMBER, MEMBER_ID, ACCOUNT_PW, BALANCE, ALIAS, OFTEN_USED, TYPE)
VALUES('111-000000002-001', 'test', 1234, 1000, '급여용통장', 'Y', 3);



-- 상품 코드
DESC HANA_PRODUCT;

/*
이름   널?       유형           
---- -------- ------------ 
CODE NOT NULL NUMBER(3)    
NAME NOT NULL VARCHAR2(30)
*/

INSERT INTO HANA_PRODUCT VALUES(1, '자유입출금');
INSERT INTO HANA_PRODUCT VALUES(2, '정기예금');
INSERT INTO HANA_PRODUCT VALUES(3, '급여');

COMMIT;

SELECT TO_CHAR(CODE, 'FM000') FROM HANA_PRODUCT WHERE NAME = '자유입출금';



-- 계좌 가운데 번호 시퀀스 : 0부터 시작해서 000/001/002
CREATE SEQUENCE HANA_ACNT_CODE_SEQ
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999999999
    MINVALUE 1
    NOCYCLE;

DROP SEQUENCE HANA_ACNT_CODE_SEQ;

SELECT TO_CHAR(HANA_ACNT_CODE_SEQ.NEXTVAL, 'FM000000000') FROM DUAL;


-- 통합 계좌 개설 내역에서 한달 내 계좌 개설한 적 있는지 찾아보기
SELECT * FROM OPENING_HISTORY;
DESC OPENING_HISTORY;
/*

이름               널?       유형           
---------------- -------- ------------ 
OPEN_HISTORY_SEQ NOT NULL NUMBER(3)    
RESIDENT_NUMBER  NOT NULL VARCHAR2(14) 
ACCOUNT_NUMBER   NOT NULL VARCHAR2(30) 
BANK_CODE        NOT NULL NUMBER(3)    
OPENING_DATE     NOT NULL DATE         
NAME             NOT NULL VARCHAR2(30) 
*/

SELECT COUNT(*) FROM OPENING_HISTORY
WHERE RESIDENT_NUMBER = '931202-2222222'
AND OPENING_DATE < (add_months(sysdate,-1));

select * from HANA_ACCOUNT;
select * from OPENING_HISTORY;

INSERT INTO OPENING_HISTORY VALUSE(
    SELECT OPENING_HISTORY_SEQ.NEXTVAL ,RESIDENT_NUMBER, ACCOUNT_NUMBER, 0 , OPENING_DATE, NAME
    FROM HANA_MEMBER M, HANA_ACCOUNT A
    WHERE M.ID = A.MEMBER_ID
    AND
    A.ACCOUNT_NUMBER = '111-000000004-003'
);

SELECT * FROM OPENING_HISTORY;


-- 한달내 계좌 개설한적 있는지 확인하기
SELECT COUNT(*) FROM OPENING_HISTORY
WHERE RESIDENT_NUMBER = '999999-1111111'
AND OPENING_DATE + 30 > SYSDATE;
/*
개설일 + 30일 > 오늘날짜
*/

commit;

SELECT COUNT(*) FROM OPENING_HISTORY
WHERE RESIDENT_NUMBER = '931202-2222222';
commit;
SELECT OPENING_DATE FROM OPENING_HISTORY
WHERE RESIDENT_NUMBER = '931202-2222222';

SELECT OPENING_DATE + 30 FROM OPENING_HISTORY
WHERE RESIDENT_NUMBER = '931202-2222222';


-- 통합 계좌 개설 내역에 추가하기 : member + account join해서 INSERT해야 함

DESC OPENING_HISTORY;
DESC HANA_MEMBER;

INSERT INTO OPENING_HISTORY 
VALUES(
    SELECT RESIDENT_NUMBER, NAME FROM HANA_MEMBER WHERE ID = 'haeni'
    
);


SELECT RESIDENT_NUMBER, NAME FROM HANA_MEMBER WHERE ID = 'haeni';
SELECT ACCOUNT_NUMBER, OPENING_DATE FROM HANA_ACCOUNT;

SELECT RESIDENT_NUMBER, NAME,ACCOUNT_NUMBER, OPENING_DATE 
FROM HANA_MEMBER, HANA_ACCOUNT 
WHERE ID = 'haeni';


SELECT * FROM HANA_MEMBER WHERE ID = 'haeni';

SELECT MEMBER_ID FROM HANA_ACCOUNT WHERE ACCOUNT_NUMBER = 'XXX-XXXXXX-XXXXX';

SELECT RESIDENT_NUMBER, NAME,ACCOUNT_NUMBER,0 ,OPENING_DATE  
FROM HANA_MEMBER, HANA_ACCOUNT 
WHERE ID = (SELECT MEMBER_ID FROM HANA_ACCOUNT WHERE ACCOUNT_NUMBER = 'XXX-XXXXXX-XXXXX');

SELECT * FROM BANK;

INSERT INTO OPENING_HISTORY VALUSE(
    SELECT 
        RESIDENT_NUMBER, 
        ACCOUNT_NUMBER,
        0 ,
        OPENING_DATE,
        NAME
    FROM HANA_MEMBER, HANA_ACCOUNT 
    WHERE ID = (SELECT MEMBER_ID FROM HANA_ACCOUNT WHERE ACCOUNT_NUMBER = 'XXX-XXXXXX-XXXXX')
);

INSERT INTO OPENING_HISTORY VALUSE(
    SELECT RESIDENT_NUMBER, ACCOUNT_NUMBER, 0 , OPENING_DATE, NAME
    FROM HANA_MEMBER, HANA_ACCOUNT 
    WHERE ID = (SELECT MEMBER_ID FROM HANA_ACCOUNT WHERE ACCOUNT_NUMBER = 'XXX-XXXXXX-XXXXX')
);



INSERT INTO OPENING_HISTORY VALUSE(
    SELECT RESIDENT_NUMBER, ACCOUNT_NUMBER, 0 , OPENING_DATE, NAME
    FROM HANA_MEMBER M, HANA_ACCOUNT A
    WHERE M.ID = A.MEMBER_ID
    AND
    A.ACCOUNT_NUMBER = '111-000000004-003'
);

DESC OPENING_HISTORY;
/*
이름               널?       유형           
---------------- -------- ------------ 
OPEN_HISTORY_SEQ NOT NULL NUMBER(3)    
RESIDENT_NUMBER  NOT NULL VARCHAR2(14) 
ACCOUNT_NUMBER   NOT NULL VARCHAR2(30) 
BANK_CODE        NOT NULL NUMBER(3)    
OPENING_DATE     NOT NULL DATE         
NAME             NOT NULL VARCHAR2(30) 
*/

INSERT INTO OPENING_HISTORY VALUSE(
    SELECT OPENING_HISTORY_SEQ.NEXTVAL ,RESIDENT_NUMBER, ACCOUNT_NUMBER, 0 , OPENING_DATE, NAME
    FROM HANA_MEMBER M, HANA_ACCOUNT A
    WHERE M.ID = A.MEMBER_ID AND A.ACCOUNT_NUMBER = '111-000000021-001'
);


SELECT * FROM OPENING_HISTORY;


SELECT RESIDENT_NUMBER, ACCOUNT_NUMBER, 0 , OPENING_DATE, NAME
FROM HANA_MEMBER M, HANA_ACCOUNT A
WHERE M.ID = A.MEMBER_ID
AND
A.ACCOUNT_NUMBER = '111-000000004-003';

(SELECT MEMBER_ID FROM HANA_ACCOUNT WHERE ACCOUNT_NUMBER = '111-000000004-003');

SELECT MEMBER_ID FROM HANA_ACCOUNT WHERE ACCOUNT_NUMBER = '111-000000004-003';




-- 계좌 찾기 : id로
SELECT * FROM HANA_ACCOUNT WHERE MEMBER_ID = 'haeni';
SELECT * FROM OPENING_HISTORY;

SELECT * FROM HANA_ACCOUNT;
SELECT * FROM HANA_MEMBER;

ROLLBACK;

SELECT * FROM OPENING_HISTORY;



-- 계좌 찾기 : 계좌번호로
SELECT * FROM HANA_ACCOUNT WHERE ACCOUNT_NUMBER = '111-000000021-001';

SELECT * FROM HANA_ACCOUNT 
WHERE ACCOUNT_NUMBER = '111-000000021-001' and member_id = 'test';



-- 계좌 별칭 수정하기 

SELECT * FROM HANA_ACCOUNT;
UPDATE HANA_ACCOUNT SET ALIAS = '수정테스트' WHERE ACCOUNT_NUMBER = '111-000000021-001';
ROLLBACK;


-- 계좌 잔액 확인하기
SELECT * FROM HANA_ACCOUNT 
WHERE ACCOUNT_NUMBER = '111-000000021-001' AND ACCOUNT_PW = '1234';

SELECT BALANCE FROM HANA_ACCOUNT 
WHERE ACCOUNT_NUMBER = '111-000000021-001' AND ACCOUNT_PW = '1234';


-- 계좌 삭제하기
DELETE FROM HANA_ACCOUNT WHERE ACCOUNT_NUMBER = '111-000000021-001' AND ACCOUNT_PW = '1234';
ROLLBACK;



DESC OPENING_HISTORY;
SELECT * FROM HANA_MEMBER;
SELECT * FROM OPENING_HISTORY;

UPDATE HANA_ACCOUNT SET BALANCE = 0 WHERE ACCOUNT_NUMBER = 'XXX-XXXXXX-XXXXX';
COMMIT;


-- 통합계좌 가입 이력 확인
SELECT * FROM HANA_OPEN_BANKING_MEMBER;

SELECT COUNT(*) FROM HANA_OPEN_BANKING_MEMBER WHERE MEMBER_ID = 'test3';

-- 통합계좌 시스템 등록
DESC HANA_OPEN_BANKING_MEMBER;
/*
이름           널?       유형           
------------ -------- ------------ 
OPEN_MEM_SEQ NOT NULL NUMBER(30)   
MEMBER_ID    NOT NULL VARCHAR2(14) 
OPEN_PW      NOT NULL NUMBER(4)   
*/

INSERT INTO HANA_OPEN_BANKING_MEMBER 
VALUES(HANA_OPEN_B_MEM_SEQ.NEXTVAL, 'test3', 1234);


-- OPENLIST의 계좌 조회 + 통합계좌에 등록되어 있는지 확인하기
DESC OPENING_HISTORY;

SELECT COUNT(*) FROM HANA_OPEN_BANKING_ACCOUNT A, BANK B
WHERE A.BANK_CODE = B.CODE
AND B.NAME = '하나'
AND A.MEMBER_ID = 'test3'
AND A.ACCOUNT_NUMBER = '111-000000041-003';

SELECT * FROM OPENING_HISTORY;
SELECT * FROM HANA_ACCOUNT;
SELECT * FROM HANA_MEMBER;
SELECT * FROM HANA_OPEN_BANKING_MEMBER;
SELECT * FROM HANA_OPEN_BANKING_ACCOUNT;



-- CODE NAME
SELECT RESIDENT_NUMBER,ACCOUNT_NUMBER, B.NAME , O.NAME 
FROM OPENING_HISTORY O, BANK B
WHERE O.BANK_CODE = B.CODE
AND RESIDENT_NUMBER = '999999-1111111';

SELECT RESIDENT_NUMBER,ACCOUNT_NUMBER,BANK_CODE, NAME 
FROM OPENING_HISTORY H, HANA_OPEN_BANKING_ACCOUNT A
WHERE RESIDENT_NUMBER = '999999-1111111';

SELECT * FROM OPENING_HISTORY WHERE RESIDENT_NUMBER = '931202-2222222';



-- 통합계좌 시스템에 계좌 등록
SELECT * FROM HANA_OPEN_BANKING_ACCOUNT
WHERE BANK_CODE = '0' AND RESIDENT_NUMBER = '931202-2222222' AND MEMBER_ID = 'test3';

/*
OPEN_ACNT_SEQ
MEMBER_ID
BANK_CODE
ACCOUNT_NUMBER
REGDATE
*/

SELECT MEMBER_ID, CODE, ACCOUNT_NUMBER 
FROM HANA_OPEN_BANKING_ACCOUNT A, BANK B
WHERE A.BANK_CODE = B.CODE
AND B.NAME = '하나'
AND A.ACCOUNT_NUMBER = '111-000000041-003'
AND A.MEMBER_ID = 'test3';

DESC HANA_OPEN_BANKING_ACCOUNT;

-- ㅇㅗㄹㅠ
INSERT INTO HANA_OPEN_BANKING_ACCOUNT(OPEN_ACNT_SEQ, MEMBER_ID, BANK_CODE, ACCOUNT_NUMBER) 
VALUES(OPEN_B_ACNT_SEQ.NEXTVAL, 'test3', (SELECT CODE FROM BANK WHERE NAME = '하나'), '111-000000041-003');


INSERT INTO HANA_OPEN_BANKING_ACCOUNT(OPEN_ACNT_SEQ, MEMBER_ID, BANK_CODE, ACCOUNT_NUMBER) 
SELECT OPEN_B_ACNT_SEQ.NEXTVAL, MEMBER_ID, CODE, ACCOUNT_NUMBER 
FROM HANA_OPEN_BANKING_ACCOUNT A, BANK B
WHERE A.BANK_CODE = B.CODE
AND B.NAME = '하나'
AND A.ACCOUNT_NUMBER = '111-000000041-003'
AND A.MEMBER_ID = 'test3';

SELECT OPEN_B_ACNT_SEQ.NEXTVAL, A.MEMBER_ID, B.CODE, H.ACCOUNT_NUMBER 
FROM OPENING_HISTORY H , BANK B, HANA_ACCOUNT A
WHERE H.BANK_CODE = B.CODE
AND B.NAME = '하나'
AND H.ACCOUNT_NUMBER = '111-000000041-003'
AND H.RESIDENT_NUMBER = '991212-1222222'
AND A.MEMBER_ID = 'test3';

SELECT * FROM HANA_ACCOUNT;
SELECT * FROM OPENING_HISTORY;

DESC OPENING_HISTORY;


DELETE FROM HANA_OPEN_BANKING_ACCOUNT;
SELECT * FROM HANA_OPEN_BANKING_ACCOUNT;
COMMIT;



--
